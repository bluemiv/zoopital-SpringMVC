<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
 <mapper namespace="com.pet.model.StoreDAO">
    <!-- Admin 입력 페이지 쿼리 -->
    <insert id="insert" parameterType="com.pet.model.StoreDTO">
	    INSERT INTO STORE
	    	(STORE_CODE, STORE_NAME, STORE_COST, STORE_PAYMENT, STORE_INCOME, STORE_RENTCOST, STORE_DOCTOR, STORE_WORKER, STORE_DATE, STORE_ROLE)
	    VALUES
	    	(#{store_code}, #{store_name},#{store_cost},DEFAULT,DEFAULT,#{store_rentCost},DEFAULT,DEFAULT,SYSDATE, #{store_role})
    </insert>
   <!-- Admin목록 페이지 쿼리 -->
    <select id="getSelectAll" resultType="com.pet.model.StoreDTO">
		SELECT *
		FROM STORE
    </select>
    <select id="adminUpdate" resultType="com.pet.model.StoreDTO" parameterType="com.pet.model.StoreDTO">
	    SELECT *
	    FROM STORE
	    WHERE STORE_CODE = #{store_code}
    </select>
    <!-- 수정기능 -->
    <update id="adminUpdatePro">
    	UPDATE STORE
    	<set>
    		<if test="store_code != null and store_code != ''">
    			STORE_CODE=#{store_code},
    		</if>
    		<if test="store_name != null and store_name != ''">
    			STORE_NAME=#{store_name},
    		</if>
    		<if test="store_cost != null and store_cost != ''">
    			STORE_COST=#{store_cost},
    		</if>
    		<if test="store_payment != null and store_payment != ''">
    			STORE_PAYMENT=#{store_payment},
    		</if>
    		<if test="store_income != null and store_income != ''">
    			STORE_INCOME=#{store_income},
    		</if>
    		<if test="store_rentCost != null and store_rentCost != ''">
    			STORE_RENTCOST=#{store_rentCost},
    		</if>
    		<if test="store_doctor != null and store_doctor != ''">
    			STORE_DOCTOR=#{store_doctor},
    		</if>
    		<if test="store_worker != null and store_worker != ''">
    			STORE_WORKER=#{store_worker},
    		</if>
    		<if test="store_role != null and store_role != ''">
    			STORE_ROLE=#{store_role},
    		</if>
    	</set>
    	WHERE STORE_CODE = #{store_code}
    </update>
    <!-- 삭제기능 -->
    <delete id="adminDelete">
	    DELETE
	    FROM STORE
	    WHERE STORE_CODE = #{store_code}
    </delete>
	<!-- 페이징 카운트 -->
	<select id ="getListCount" resultType= "Integer">
		SELECT COUNT(*)
		FROM STORE
	</select>
	<!-- 패이징 처리기능 -->
	<select id="getPageSelectAll" resultType = "com.pet.model.StoreDTO" parameterType="com.pet.model.PageDTO">
		SELECT *
		FROM (
				SELECT ROWNUM R, A.*
				FROM (SELECT *
							FROM STORE
							ORDER BY STORE_DATE DESC) A)
		WHERE R BETWEEN #{startNum} AND #{endNum}
	</select>
	
	<!-- 검색기능 -->
	<select id="searchStore"  resultType="com.pet.model.StoreDTO" parameterType="com.pet.model.StoreDTO">
		SELECT * 
		FROM STORE
		WHERE STORE_NAME LIKE '%${store_name}%'	
	</select>
	
	<!-- store_code 가져오기 -->
	<select id="selectAllStoreCode" resultType= "com.pet.model.StoreDTO">
		SELECT STORE_CODE, STORE_NAME
		FROM STORE
		GROUP BY STORE_CODE, STORE_NAME
		ORDER BY STORE_CODE
	</select>
	
	<update id="updateTotalStorePay" parameterType="com.pet.model.StoreDTO">
		UPDATE STORE
		SET STORE_PAYMENT = #{store_payment}, STORE_INCOME = #{store_income}
		WHERE STORE_CODE = #{store_code}
	</update>
	
 </mapper>